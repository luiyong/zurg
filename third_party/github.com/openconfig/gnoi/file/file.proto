//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package gnoi.file;

import "github.com/openconfig/gnoi/common/common.proto";
import "github.com/openconfig/gnoi/types/types.proto";

option go_package = "github.com/openconfig/gnoi/file";

option (types.gnoi_version) = "0.1.0";

service File {
  rpc Get(GetRequest) returns (stream GetResponse) {}
  rpc TransferToRemote(TransferToRemoteRequest)
    returns (TransferToRemoteResponse) {}
  rpc Put(stream PutRequest) returns (PutResponse) {}
  rpc Stat(StatRequest) returns (StatResponse) {}
  rpc Remove(RemoveRequest) returns (RemoveResponse) {}
}

message PutRequest {
  message Details {
    string remote_file = 1;
    uint32 permissions = 2;
  }
  oneof request {
    Details open = 1;
    bytes contents = 2;
    gnoi.types.HashType hash = 3; // hash of the file.
  }
}

message PutResponse {}

message GetRequest { string remote_file = 1; }

message GetResponse {
  oneof response {
    bytes contents = 1;
    gnoi.types.HashType hash = 2; // hash of the file.
  }
}

message TransferToRemoteRequest {
  string local_path = 1;
  gnoi.common.RemoteDownload remote_download = 2;
}

message TransferToRemoteResponse { types.HashType hash = 1; }

message StatRequest { string path = 1; }

message StatResponse { repeated StatInfo stats = 1; }

message StatInfo {
  string path = 1;
  uint64 last_modified = 2; // Nanoseconds since epoch.
  uint32 permissions = 3;
  uint64 size = 4;
  uint32 umask = 5;
}

message RemoveRequest { string remote_file = 1; }

message RemoveResponse {}

