name: Ubuntu

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build cmake pkg-config \
            libprotobuf-dev protobuf-compiler libgrpc++-dev libpcap-dev libssl-dev gcovr

      - name: Configure project
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build

      - name: Configure tests
        run: cmake -S test -B test/build -DGTest_ROOT=${{ github.workspace }}/local/gtest -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug

      - name: Build tests
        run: cmake --build test/build

      - name: Test
        run: ctest --output-on-failure --test-dir test/build

      - name: Coverage report
        run: |
          mkdir -p coverage
          gcovr -r ${{ github.workspace }} \
            --object-directory test/build \
            --txt coverage/summary.txt \
            --xml coverage/coverage.xml \
            --html-details coverage/index.html \
            --filter "${{ github.workspace }}/source/zurg" \
            --exclude 'third_party/.*' \
            --exclude 'build/.*/.*' \
            --exclude 'test/build/generated/.*' \
            --exclude 'local/gtest/.*' \
            --exclude 'standalone/.*' \
            --exclude 'test/source/.*' \
            --fail-under-line 90

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: collect code coverage
        run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
